-- Create the employees table with four equal partitions

CREATE TABLE EMPLOYEES
(
    EMPNO   INT,
    EMPNAME VARCHAR(32)
)
    PARTITION BY RANGE (EMPNO)
(
    PARTITION P1 VALUES LESS THAN (100),
    PARTITION P2 VALUES LESS THAN (200),
    PARTITION P3 VALUES LESS THAN (300),
    PARTITION P4 VALUES LESS THAN (MAXVALUE)
);

-- Insert some data into the employees table
INSERT INTO EMPLOYEES
VALUES (40, 'A');
INSERT INTO EMPLOYEES
VALUES (140, 'B');
INSERT INTO EMPLOYEES
VALUES (200, 'C');
INSERT INTO EMPLOYEES
VALUES (240, 'D');

-- Query the employees table
SELECT *
FROM EMPLOYEES;

-- INSERTING DATA THAT DOES NOT MATCH THE PARTITIONING SCHEME
INSERT INTO EMPLOYEES
VALUES (400, 'E');
INSERT INTO EMPLOYEES
VALUES (500, 'F');

-- QUERY THE PARTITIONED TABLE
SELECT *
FROM EMPLOYEES PARTITION (P1);

SELECT *
FROM EMPLOYEES PARTITION (P2);

SELECT *
FROM EMPLOYEES PARTITION (P3);

SELECT *
FROM EMPLOYEES PARTITION (P4);

-- DESCRIBE THE EMPLOYEES TABLE PARTITIONS
SELECT *
FROM ALL_TAB_PARTITIONS
WHERE TABLE_NAME = 'EMPLOYEES';

-- CREATE A PARTITIONED TABLE WITH A COMPOSITE PARTITIONING SCHEME
CREATE TABLE supplier_parts
(
    supplier_id NUMBER,
    partnum     NUMBER,
    quantity    NUMBER
)
    PARTITION BY RANGE (supplier_id, partnum)
(
    PARTITION p1 VALUES LESS THAN (6, 50),
    PARTITION p2 VALUES LESS THAN (11, 100),
    PARTITION p3 VALUES LESS THAN (MAXVALUE, MAXVALUE)
);

INSERT INTO supplier_parts
VALUES (5, 5, 1000);
INSERT INTO supplier_parts
VALUES (5, 150, 1000);
INSERT INTO supplier_parts
VALUES (10, 50, 1000);
INSERT INTO supplier_parts
VALUES (10, 100, 1000);
SELECT *
FROM SUPPLIER_PARTS PARTITION (P1);
SELECT *
FROM SUPPLIER_PARTS PARTITION (P2);
SELECT *
FROM SUPPLIER_PARTS PARTITION (P3);